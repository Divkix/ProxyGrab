name: Release Package

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      version_level:
        type: choice
        description: Which version to release
        options:
          - patch
          - minor
          - major

jobs:
  pre-commit:
    uses: divkix/reusable-workflows/.github/workflows/pre-commit.yml@main

  update-version:
    needs: pre-commit
    uses: divkix/reusable-workflows/.github/workflows/update-python-package-version.yml@main
    with:
      version_level: ${{ github.event.inputs.version_level }}

  # fetch some info from repo such as latest tag and name in lowercase
  get-repo-info:
    if: always()
    needs: update-version
    uses: divkix/reusable-workflows/.github/workflows/get-repo-info.yml@main

  build-and-test:
    if: always()
    needs: get-repo-info
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest, macOS-latest, windows-latest]
    uses: divkix/reusable-workflows/.github/workflows/build-and-test-python-package.yml@main
    with:
      custom_commands: |-
        proxygrab --help
        python test_script.py
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}

  # create a release on github
  create-release:
    if: always()
    needs:
      - build-and-test
      - get-repo-info
    uses: divkix/reusable-workflows/.github/workflows/create-release.yml@main
    with:
      tag: ${{ needs.get-repo-info.outputs.tag }}

  push-to-pypi:
    if: always()
    needs:
     - create-release
     - get-repo-info
    uses: divkix/reusable-workflows/.github/workflows/push-to-pypi.yml@main
    with:
      tag: ${{ needs.get-repo-info.outputs.tag }}
    secrets:
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
